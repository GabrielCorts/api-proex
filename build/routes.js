"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var ensureSuper_1 = require("./middlewares/ensureSuper");
var ensureAuthenticated_1 = require("./middlewares/ensureAuthenticated");
var AuthenticateUserController_1 = require("./controllers/AuthenticateUserController");
var UserController_1 = require("./controllers/UserController");
var MapController_1 = require("./controllers/MapController");
var BuildingController_1 = require("./controllers/BuildingController");
var OrganizationController_1 = require("./controllers/OrganizationController");
var PointController_1 = require("./controllers/PointController");
var router = express_1.Router();
var userController = new UserController_1.UserController();
var mapController = new MapController_1.MapController();
var buildingController = new BuildingController_1.BuildingController();
var organizationController = new OrganizationController_1.OrganizationController();
var authenticateUserController = new AuthenticateUserController_1.AuthenticateUserController();
var pointController = new PointController_1.PointController();
router.get('/', function (req, resp) {
    return resp.status(200).json({ message: 'Bem vindo api-proex' });
});
router.post('/users', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, userController.create);
router.get('/users', ensureAuthenticated_1.ensureAuthenticated, userController.ready);
router.get('/users/:id', ensureAuthenticated_1.ensureAuthenticated, userController.readyById);
router.put('/users/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, userController.update);
router.delete('/users/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, userController.delete);
router.post('/maps', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, mapController.create);
router.get('/maps', ensureAuthenticated_1.ensureAuthenticated, mapController.ready);
router.get('/maps/:id', ensureAuthenticated_1.ensureAuthenticated, mapController.readyById);
router.put('/maps/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, mapController.update);
router.delete('/maps/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, mapController.delete);
router.post('/buildings', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, buildingController.create);
router.get('/buildings', ensureAuthenticated_1.ensureAuthenticated, buildingController.ready);
router.get('/buildings/:id', ensureAuthenticated_1.ensureAuthenticated, buildingController.readyById);
router.put('/buildings/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, buildingController.update);
router.delete('/buildings/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, buildingController.delete);
router.post('/organizations', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, organizationController.create);
router.get('/organizations', ensureAuthenticated_1.ensureAuthenticated, organizationController.ready);
router.get('/organizations/:id', ensureAuthenticated_1.ensureAuthenticated, organizationController.readyById);
router.put('/organizations/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, organizationController.update);
router.delete('/organizations/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, organizationController.delete);
router.post('/points', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, pointController.create);
router.get('/points', ensureAuthenticated_1.ensureAuthenticated, pointController.ready);
router.get('/points/:id', ensureAuthenticated_1.ensureAuthenticated, pointController.readyById);
router.put('/points/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, pointController.update);
router.delete('/points/:id', ensureAuthenticated_1.ensureAuthenticated, ensureSuper_1.ensureSuper, pointController.delete);
router.post('/login', authenticateUserController.handle);
exports.default = router;
